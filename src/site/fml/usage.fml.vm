<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2009
  ~
  ~ This file is part of HibernateJConsole.
  ~
  ~     HibernateJConsole is free software: you can redistribute it and/or modify
  ~     it under the terms of the GNU General Public License as published by
  ~     the Free Software Foundation, either version 3 of the License, or
  ~     (at your option) any later version.
  ~
  ~     HibernateJConsole is distributed in the hope that it will be useful,
  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~     GNU General Public License for more details.
  ~
  ~     You should have received a copy of the GNU General Public License
  ~     along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
  -->
<faqs xmlns="http://maven.apache.org/FML/1.0.1"
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	  xsi:schemaLocation="http://maven.apache.org/FML/1.0.1 http://maven.apache.org/xsd/fml-1.0.1.xsd"
	  title="Usage" toplink="false">

	<part id="pre-requisites">
		<title>Prerequisites</title>

		<faq id="hibernate-jmx-01">
			<question>
				Enable JMX support inside Hibernate - Using the Spring Framework
			</question>
			<answer>
				<p>
					Hibernate does not publish MBeans by default.
					The following snippet can be used when running inside a Spring environment.
				</p>
				<source><![CDATA[
<bean id="jmxExporter" class="org.springframework.jmx.export.MBeanExporter">
    <property name="beans">
        <map>
            <entry key="Hibernate:application=Statistics" value-ref="hibernateStatisticsBean"/>
        </map>
    </property>
</bean>

<bean id="hibernateStatisticsBean" class="org.hibernate.jmx.StatisticsService">
    <property name="statisticsEnabled" value="true"/>
    <property name="sessionFactory">
    	<!-- Uncomment the following when using Hibernate directly -->
        <!-- ref local="sessionFactory"/ -->

        <!-- Uncomment the following when using Hibernate via JPA
             (Assuming the managed EMF is named 'entityManagerFactory'.
              Namespace is: xmlns:util="http://www.springframework.org/schema/util")
        -->
        <!-- util:property-path path="entityManagerFactory.sessionFactory" /-->
    </property>
</bean>]]></source>
			</answer>
		</faq>

		<faq id="hibernate-jmx-02">
			<question>
				Enable JMX support inside Hibernate - Using the API
			</question>
			<answer>
				<p>
					Alternatively the following Java code can be used to publish the MBeans.
				</p>
				<source><![CDATA[
SessionFactory sf = ...;
StatisticsService statsMBean = new StatisticsService();
statsMBean.setSessionFactory(sf);
statsMBean.setStatisticsEnabled(true);

MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer();
mBeanServer.registerMBean(statsMBean, new ObjectName("Hibernate:application=Statistics"));]]></source>

				<b>Hibernate in JPA environment:</b>
				<source>
EntityManagerFactory emf = ...;
SessionFactory sf = ((HibernateEntityManagerFactory)emf).getSessionFactory();
				</source>
			</answer>
		</faq>

		<faq id="hibernate-statistics">
			<question>
				Enable the generation of statistics inside Hibernate
			</question>
			<answer>
				<p>
					Make sure you set the hibernate property "<code>hibernate.generate_statistics</code>"
					to true inside "persistence.xml" or any other supported configuration file.
				</p>
				<source><![CDATA[<prop key="hibernate.generate_statistics">true</prop>]]></source>
			</answer>
		</faq>
	</part>

	<part id="jconsole">
		<title>Using the plugin with JConsole</title>

		<faq id="quickstart-jconsole">
			<question>
				Quickstart with JConsole
			</question>
			<answer>
				<source>java -jar ${project.build.finalName}.jar</source>
				<p>
				    <b>Note:</b>
				    From version 1.0.4 the plugin automatically searches the JConsole executable
				    and passes all given arguments. When connecting to a locally monitored
				    process, the hibernate jars are automatically detected and added to
				    JConsole's classpath.
                </p>
			</answer>
		</faq>

		<faq id="quickstart-jconsole-prior-1.0.4">
			<question>
				Quickstart with JConsole - Prior to 1.0.4
			</question>
			<answer>
				<source>
cd C:\Sandbox\Libraries\hibernate
jconsole -pluginpath C:\Sandbox\\${project.build.finalName}.jar
				</source>
				<p>
					<b>Important Note:</b>
					Make sure you start JConsole from a working path which contains
					<b>"hibernate3.jar"</b>
					as this is required by the plugin to work correctly.
				</p>
			</answer>
		</faq>

		<faq id="customize-jconsole">
			<question>
				Customizations
			</question>
			<answer>
				<source>
jconsole -pluginpath C:\Sandbox\\${project.build.finalName}.jar \
		-J-Dhibernate.classpath=C:\Sandbox\Libraries\hibernate\hibernate3.jar \
		-J-Dhibernate.mbean=Hibernate:application=Statistics
				</source>
				<ul>
					<li>
						"<code>hibernate.classpath</code>":
						Points to a jar or directory of jars that contains the hibernate jars.
						<br/>
						(If the path is set to a directory, the filename pattern "hibernate*.jar" is used
						to add all matching jars to the system classpath)
					</li>
					<li>
						"<code>hibernate.mbean</code>":
						Specifies the object name of the Hibernate statistics Mbean for the case that it wasn't
						published under the name suggested above.
					</li>
				</ul>
			</answer>
		</faq>
	</part>

	<part id="visualvm">

		<title>Using the plugin with VisualVm</title>

		<faq id="how-install">
			<question>
				Quickstart with VisualVm
			</question>
			<answer>
				<p>
					Make sure you installed the plugin "VisualVm-JConsole" and configured the
					"JConsole-Plugin" path inside the "Options" menu to point to "${project.build.finalName}.jar".
				</p>
				<p>
					Restart VisualVm and start monitoring Hibernate applications.
				</p>
				<p>
					When monitoring remote application, restart VisualVM either in the correct working path or by
					adding the customization parameters inside the commandline as shown below.
					(see <a href="#customize-jconsole">Customizations</a> for more details)
				</p>
				<source>
visualvm -J-Dhibernate.classpath=C:\Sandbox\Libraries\hibernate\hibernate3.jar \
		-J-Dhibernate.mbean=Hibernate:application=Statistics
				</source>
			</answer>
		</faq>
	</part>
</faqs>